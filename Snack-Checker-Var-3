#include <iostream>
#include <string>
#include <array>

using namespace std;
bool notBlank(string &x, string y, string z)
{
    bool valid = false;
    //Sets an infinite loop unless the conditions are met
    while(!valid)
    {
        cout << y << endl;
        getline(cin , x);
        while (x.length() == 0)
        {
            cout << z << endl;
            cout << y << endl;
            getline(cin, x);
        }
        for(int i = 0; i < x.length(); i++)
        {
            char ch = x[i];
            if (!isspace(ch))
            {
                valid = true;
                return true;
            }
            else
            {
                cout << z << endl;
                break;
                
            }
            
        }
    }
    return false;
}
bool stringInput(string &userInput, string message, string error)
{
    //Establish variables
    bool valid = false;
    
    //Iterating through the number of characters to check if a number is entered
    while(!valid)
    {
        string input;
        //Checks whether the input is of blank type, and deals with it appropriately
        notBlank(input, message , error);
        for(int i = 0; i < input.length(); i++)
        {
            //If the character is a number, output error
            if (isalpha(input[i]) == false)
            {
                cout << error << endl;
            }
            else
            {
                //If the character is the last character, the conditions are met
                if(i + 1 == input.length())
                {
                    userInput = input;
                    valid = true;
                }
            }
        }
    }
    return true;
}
bool exitCode(string x)
{
    if(x == "xxx")
    {
        return true;
    }
    return false;
}
int snackInput(string &menuChoice, bool &snackFinish)
{
    string menuList[5][3] = {{"popcorn", "corn", "pop"}, {"m&m", "mandm", "mm"}, {"water", "water", "water"}, {"orangejuice","orange", "juice"}, {"pitachips", "chips", "pita"}};
    string menuInput;
    while(!exitCode(menuInput))
    {
        stringInput(menuInput, "Please enter your preferred snack", "Error message here");
        for(int r = 0; r < 5; r++)
        {
            for(int i = 0; i < 3; i++)
            {
                size_t found = menuList[r][i].find(menuInput);
                if (found!=std::string::npos)
                {
                    menuChoice = menuList[r][0];
                    cout << "Snack =" << menuChoice << endl;
                    return 0;
                }
            }
        }
        if(menuChoice.empty() and !exitCode(menuInput))
        {
            cout << "Sorry, that may not be an available snack" << endl;
        }
    }
    snackFinish == true;
    return 0;
}

int main()
{
    string menuChoice[3];
    bool snackFinish = false;
    for(int i = 0; i < 3; i++)
    {
        while(!snackFinish)
        {
            snackInput(menuChoice[i], snackFinish);
        }
    }
}
