#include <iostream>
#include <string.h>
#include <fstream>
#include <iomanip>

using namespace std;

string menuList[5][3] = {{"popcorn", "corn", "pop"}, {"m&m", "mandm", "mm"},{"pitachips", "chips", "pita"}, {"orangejuice","orange", "juice"}, {"water", "water", "water"}};
int results[150][5] = {};
float snackCost[5] = {2.50, 3.00, 4.50, 3.25, 2.00};
//ticket cost, total cost, snack total cost, profit, surcharge
float costs[150][5] = {};
string name[150] = {""};
int age[150] = {};
bool credit[150] = {};

string commonOutput[1] = {"That is not a valid input"};
int noOfSnack, snackType;
float profitPercent = 0.2;

ofstream csv_file("ticketSheet.csv");

int lower(string &lowString)
{
    for(int x = 0; x < lowString.length(); x++ ) 
    {
        lowString[x] = tolower(lowString[x]);
    }
    return 0;
}

bool strChecker(string strInput)
{
    for(int i = 0; i < strInput.length(); i++)
    {
        if (isalpha(strInput[i]))
        {
            if(i + 1 == strInput.length())
            {
                return true;
            }
        }
        else
        {
            cout << "Please enter a valid Input" << endl;
            break;
        }
    }
    return false;
}

bool intChecker(string intInput)
{
    for(int i = 0; i < intInput.length(); i++)
    {
        if (isdigit(intInput[i]))
        {
            if(i + 1 == intInput.length())
            {
                return true;
            }
        }
        else
        {
            cout << "Please enter a valid Input" << endl;
            break;
        }
    }
    return false;
}

bool notBlank(string &x, string y, string z, bool snackString)
{
    while(true)
    {
        string n;
        while (n.length() == 0)
        {
            cout << y << endl;
            getline(cin, n);
        }
        if(snackString == false)
        {
            for(int i = 0; i < n.length(); i++)
            {
                char ch = n[i];
                if (!isspace(ch))
                {

                }
                else
                {
                    cout << z << endl;
                    return false;
                    
                }
                
            }
        }
        if(snackString == true)
        {
            for(int i = 0; i < 2; i++)
            {
                char ch = n[i];
                if (!isspace(ch))
                {

                }
                else
                {
                    cout << z << endl;
                    return false;
                    
                }
                
            }
        }
        x = n;
        lower(x);
        return true;
    }
    
}

bool snackChecker(int f)
{
    string userInput;
    snackTop:
    bool snackString = true;
    while(true)
    {
        while(true)
        {
            if(notBlank(userInput, "Please enter a snack", "That is not a valid input", snackString))
            {
                break;
            }
        }
        int pos = userInput.find(" ");
        string snackInput = userInput.substr(0, pos);
        for(int r = 0; r < sizeof(menuList)/sizeof(menuList[0]); r++)
        {
            for(int i = 0; i < 3; i++)
            {
                if(snackInput == menuList[r][i])
                {
                    snackType = r;
                    string numSnacks = userInput.substr(pos +1);
                    if(intChecker(numSnacks))
                    {
                        noOfSnack = stoi(numSnacks);
                        if(noOfSnack > 3)
                        {
                            cout << "The maximum number of snacks is 3" << endl;
                            goto snackTop;
                        }
                        results[f][snackType] += noOfSnack;
                        cout << "Snack accepted" << endl;
                        return true;
                    }
                    goto snackTop;
                }
            }   
        }
        if(snackInput == "xxx")
        {
            return false;
        }
        cout << "Not a valid input" << endl;
    }
    return false;
}
int csv()
{
    for(int m = 0; m < (sizeof(age)/sizeof(age[0])); m++)
    {
        csv_file << name[m] << ",";
        csv_file << age[m] << ",";
        csv_file << costs[m][0] << ",";
        for(int i = 0; i < (sizeof(results[m])/sizeof(results[m][0])); i++)
        {
            csv_file << results[m][i];
            //if(i + 1 != (sizeof(results[m])/sizeof(results[m][0])))
            csv_file << ",";
        }
        csv_file << costs[m][2] << ",";
        if(credit[m])
        {
            csv_file << "credit" << ",";
        }
        if(!credit[m])
        {
            csv_file << "cash" << ",";
        }
        csv_file << fixed << setprecision(2);
        csv_file << costs[m][1];
        csv_file << endl;
        if(age[m + 1] == 0)
        {
            break;
        }
    }
    
    return 0;
}

int main()
{
    for(int f = 0; f < (sizeof(name)/sizeof(name[0])); f++)
    {
        string strAge, payMethod;
        bool snackString = false;
        while(true)
        {
            if(notBlank(name[f], "Please enter the Ticket-Holders Name", commonOutput[0], snackString))
            {
                if(strChecker(name[f]))
                {
                    if(name[f] == "xxx")
                    {
                        goto printRecipt;
                    }
                    break;
                }
            }
        }
        while(true)
        {
            if(notBlank(strAge, "Please enter the Ticket-Holders Age" , commonOutput[0], snackString))
            {
                if(intChecker(strAge))
                {
                    age[f] = stoi(strAge);
                    if(age[f] < 150 and age[f] > 11)
                    {
                        break;
                    }
                    cout << "Please enter a valid age in the correct format between 12 and 130" << endl;
                }
            }
        }
        for(int i = 0; i < 3; i++)
        {
            if(!snackChecker(f))
            {
                break;
            }
            
        }
        while(true)
        {
            if(notBlank(payMethod, "Would you like pay using cash or card", commonOutput[0], snackString))
            {
                if(strChecker(payMethod))
                {
                    if(payMethod == "cash")
                    {
                        credit[f] = false;
                        break;
                    }
                    if(payMethod == "card")
                    {
                        credit[f] = true;
                        break;
                    }
                    cout << "Please enter 'cash' or 'card'" << endl;
                }
            }
        }
        for(int i = 0; i < sizeof(results)/sizeof(results[0]); i++)
        {
            for(int n = 0; n < results[f][i]; n++)
            {
                costs[f][2] += snackCost[i];
            }
        }
        
        costs[f][3] = costs[f][2] * profitPercent;
        
        if(age[f] <= 15)
        {
            costs[f][0] = 7.50;
        }
        if(age[f] <= 64 and age[f] >= 16)
        {
            costs[f][0] = 10.50;
        }
        if(age[f] >= 65)
        {
            costs[f][0] = 6.50;
        }
        costs[f][1] = costs[f][0] + costs[f][2];
        if(credit[f] == true)
        {
            cout << fixed << setprecision(2);
            costs[f][4] = 0.05 * costs[f][1];
            costs[f][1] += costs[f][4];
        }
        cout << "The Total Cost is: $" << costs[f][1] << endl;
    }
    printRecipt:
    csv();
    return 0;
}
